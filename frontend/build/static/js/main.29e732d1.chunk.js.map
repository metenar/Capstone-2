{"version":3,"sources":["api.js","CurrentUserContext.js","BookCard.js","SearchForm.js","BooksList.js","Home.js","EditProfileForm.js","LoginForm.js","MyBookCard.js","MyBooksList.js","SignUpForm.js","NavBar.js","hooks/useLocalStorageState.js","ReadingCard.js","StatusList.js","DetailsCard.js","BookDetails.js","UpdateMyBookForm.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","BookApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","id","this","request","res","book","status","myBooks","myBook","book_id","updateData","MyBook","deleted","query","page","signupData","loginData","username","user","CurrentUserContext","React","createContext","BookCard","userBooks","addBookToMyBooks","useContext","useState","dropdownOpen","setOpen","visible","setVisible","history","useHistory","hasIt","handleStatus","a","push","find","obj","className","Card","CardBody","to","CardTitle","volumeInfo","title","imageLinks","style","width","src","smallThumbnail","alt","authors","map","author","description","onClick","CardFooter","categories","ButtonDropdown","isOpen","toggle","disabled","DropdownToggle","caret","color","DropdownMenu","DropdownItem","header","SearchForm","search","term","setTerm","Form","onSubmit","e","preventDefault","undefined","Input","type","name","value","placeholder","onChange","target","Button","BooksList","books","setBooks","total","setTotal","setQuery","currentPage","setCurrentPage","currentUser","pagenum","getBooksFromApi","result","res_Data","useEffect","Pagination","size","aria-label","PaginationItem","PaginationLink","previous","href","Math","ceil","i","active","index","next","Home","image","validate","values","errors","password","length","first_name","last_name","email","test","EditProfileForm","save","formik","useFormik","initialValues","firstName","lastName","actions","success","setStatus","handleSubmit","FormGroup","Label","handleChange","onBlur","handleBlur","touched","for","LoginForm","login","MyBookCard","current_status","finDate","date","finished_date","Date","toLocaleDateString","Body","Title","cover","rating","progress","replace","Footer","MyBooksList","SignUpForm","signup","NavBar","logout","Navbar","expand","exact","Nav","navbar","NavItem","useLocalStorageState","key","initialValue","window","localStorage","getItem","state","setState","setItem","ReadingCard","remove","handleDelete","StatusList","useParams","cnvrtedstatus","BooksApi","getBooksByStatus","getBooks","DetailsCard","publishedDate","published_date","year","month","day","publisher","page_count","BookDetails","setBook","getBook","getBooksFromApiById","bookData","toString","pageCount","addBook","mbook","UpdateMyBookForm","update","log","initials","App","setCurrentUser","isDataLoaded","setIsDataLoaded","setMyBooks","setToken","profileData","myoldBookData","addBookToMyBook","updateLibrary","myBookData","avarageRating","averageRating","toFixed","updateMyBook","getMyBooks","library","deleteFromMybooks","jwt","decode","getCurrentUser","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e732d1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * \n */\n\nclass BookApi {\n  \n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${BookApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get book details by book id. */\n\n  static async getBook(id) {\n    let res = await this.request(`books/${id}`);\n    return res.book;\n  }\n\n  /** Add book to books table. */\n\n  static async addBook(data){\n      let res=await this.request(`books/add`, data,\"post\")\n      return res.book;\n  }\n\n  /** Get books from my_books table by status. */\n\n  static async getBooksByStatus(status) {\n    let res = await this.request(`mybooks/status/${status}`);\n    return res.myBooks;\n  }\n\n  /** Add book to my_books table. */\n\n  static async addBookToMyBook(data){\n      let res=await this.request(`mybooks/add`,data,\"post\");\n      return res.myBooks;\n  }\n\n  /** Get books list from my_books table. */\n\n  static async getMyBooks() {\n    let res = await this.request(`mybooks`);\n    return res.myBook;\n  }\n\n  /** Get book by id from my_books table. */\n\n  static async getMyBooksById(book_id) {\n    let res = await this.request(`mybooks/${book_id}`);\n    return res.myBook;\n  }\n\n  /** Update book by id from my_books table. */\n\n  static async updateMyBook(book_id,updateData){\n    let res=await this.request(`mybooks/${book_id}`,updateData,\"patch\")\n    return res.MyBook\n  }\n\n  /** delete book by id from my_books table. */\n\n  static async deleteFromMybooks(book_id){\n    let res=await this.request(`mybooks/${book_id}`,{}, \"delete\")\n    return res.deleted\n  }\n\n  /** Get books from Google Books Api by query. */\n\n  static async getBooksFromApi(query,page){\n    let res=await this.request(`api/search/${query}/${page}`);\n    return res;\n  }\n\n  /** Get book from Google Books Api by book_id. */\n\n  static async getBooksFromApiById(id){\n    let res=await this.request(`api/${id}`);\n    return res;\n  }\n\n  // User API routes\n  /** Sign up. */\n\n  static async signup(signupData){\n    let res=await this.request(\"auth/register\",signupData,\"post\")\n    return res.token\n  }\n\n  /** Login. */\n\n  static async login(loginData){\n    let res=await this.request(\"auth/token\",loginData,\"post\")\n    return res.token\n  }\n  /** Get current user by username from users table. */\n\n  static async getCurrentUser(username){\n    let res=await this.request(`users/${username}`);\n    return res.user\n  }\n\n  /** Update current user by username from users table. */\n\n  static async update(username,updateData){\n    let res=await this.request(`users/${username}`,updateData,\"patch\")\n    return res.user\n  }\n\n}\nexport default BookApi;","import React from \"react\";\nconst CurrentUserContext=React.createContext();\n\nexport default CurrentUserContext;","import React, { useContext, useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./BookCard.css\";\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport { \n  Card, CardBody, CardFooter, CardTitle,\n  ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem\n  } from \"reactstrap\";\n\nconst BookCard=({book,userBooks})=>{\n  const {addBookToMyBooks}=useContext(CurrentUserContext);\n  const [dropdownOpen, setOpen] = useState(false);\n  const [visible,setVisible]= useState(false)\n  const history = useHistory();\n  const toggle = () => setOpen(!dropdownOpen);\n  const res=userBooks.find(obj => {\n    return obj.book_id === book.id\n  })\n  let hasIt=false\n  if(res) hasIt=true;\n  async function handleStatus(status){\n    addBookToMyBooks(book,status);\n    history.push('/mybooks')\n  }\n  const handleRead=()=>setVisible(!visible);\n    return (\n      <section className=\"BookCard\">\n        <Card>\n          <CardBody>\n            <Link to={`books/${book.id}`}>\n              <CardTitle>\n                {book.volumeInfo.title}\n                {book.volumeInfo.imageLinks && <img style={{width:'100px'}}src={book.volumeInfo.imageLinks.smallThumbnail}\n                alt={book.volumeInfo.title}\n                className=\"float-left ml-5\" />}\n              </CardTitle>\n              {book.volumeInfo.authors && <p><small>by {book.volumeInfo.authors.map(author=>author)}</small></p>} \n            </Link> \n              <p className={visible ? \"BookCard-description-visible\" : \"BookCard-description\"}><small>{book.volumeInfo.description}</small></p> \n              <button \n                onClick={handleRead}\n                className=\"read-button\">\n                {visible ? \"Read Less\" : \"Read More...\"}</button>          \n              </CardBody>\n            <CardFooter>\n            <span className=\"float-left ml-5\">Categories: {(book.volumeInfo.categories ? book.volumeInfo.categories : \"Missing\")}</span>\n            <ButtonDropdown \n              isOpen={dropdownOpen} \n              toggle={toggle}\n              className={hasIt ? \"disabled float-right\" : \"active float-right\"}\n              disabled={hasIt}>\n              <DropdownToggle caret color={hasIt ? \"danger\" : \"success\"}>\n                Add Library\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Status</DropdownItem>\n                <DropdownItem \n                  disabled={hasIt}\n                  className=\"WantToRead\"\n                  onClick={()=>handleStatus(\"Want to Read\")}\n                >Want to Read</DropdownItem>\n                <DropdownItem\n                  onClick={()=>handleStatus(\"Finished\")}\n                  className=\"Finished\"\n                  disabled={hasIt}\n                >Finished</DropdownItem>\n                <DropdownItem\n                  onClick={()=>handleStatus(\"Reading\")}\n                  className=\"Reading\"\n                  disabled={hasIt}\n                >Reading</DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>            \n            </CardFooter>\n            </Card>\n          </section>\n      );\n}\nexport default BookCard;","import React,{useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Form, Input} from 'reactstrap';\n\nconst SearchForm=({search})=>{\n    const [term,setTerm]=useState(\"\");\n    const handleChange=e=>{\n        setTerm(e.target.value);\n    }\n    const handleSubmit=e=>{\n        e.preventDefault();\n        search(term || undefined);\n        setTerm(\"\");\n    }\n    return (\n        <div className=\"mb-2\">\n        <Form onSubmit={handleSubmit} className=\"form-inline\">\n            <Input \n                className=\"form-control  flex-grow-1\"\n                type=\"text\"\n                name=\"term\"\n                value={term}\n                placeholder=\"Enter search term..\"\n                onChange={handleChange}\n                />\n            <Button type=\"submit\" color=\"primary\">Submit</Button>\n        </Form>\n        </div>\n    )\n}\nexport default SearchForm;","import React,{useState,useEffect,useContext} from \"react\";\nimport BookApi from \"./api\"\nimport { Redirect } from \"react-router-dom\";\nimport BookCard from \"./BookCard\"\nimport SearchForm from \"./SearchForm\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport \"./BookList.css\"\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst BooksList=()=>{\n    const [books,setBooks]=useState([]);\n    const [total,setTotal]=useState(0);\n    const [query,setQuery]=useState('war');\n    const [currentPage, setCurrentPage] = useState(0);\n    const {currentUser,myBooks}=useContext(CurrentUserContext)\n    useEffect(()=>{\n        search(query)\n    },[query])\n    async function search(query,pagenum=0){\n        let result=await BookApi.getBooksFromApi(query,pagenum);\n        let books=result.res_Data\n        let total=result.total\n        setBooks(books);\n        setTotal(total)\n        setQuery(query)\n    }\n    const handleClick= (e,index)=>{\n        search(query,index)\n        setCurrentPage(index);\n    }\n    const handlePreviousClick= ()=>{\n        setCurrentPage(currentPage-1);\n        search(query,currentPage)\n    }\n    const handleNextClick= ()=>{\n        setCurrentPage(currentPage+1);\n        search(query,currentPage)\n    }\n    if(!books) return <h3>Loading...<i className=\"fas fa-4x fa-spinner fa-spin\" /></h3>\n    if (!currentUser) {\n        return <Redirect to=\"/login\"/>\n    } else{\n        return (\n            <div className=\"col-md-8 offset-md-2\">\n                <h3>Books</h3>\n                <SearchForm search={search}/>\n                {books.map(book=>\n                   <BookCard book={book} userBooks={myBooks} key={book.id}/>\n                )}\n                <div className=\"pagination\">\n                <Pagination className=\"pagination-item\" size=\"sm\" aria-label=\"Page navigation\">\n                    <PaginationItem disabled={currentPage <= 0}>\n                        <PaginationLink onClick={handlePreviousClick} previous href=\"#\" />\n                    </PaginationItem>\n                    {[...Array(Math.ceil(total/20))].map((page, i) => {\n                        if(i===0 || i===(Math.ceil(total/20))-1 || (i>=currentPage-2 && i<=currentPage+2)){\n                            return (\n                                <PaginationItem active={i===currentPage} key={i}>\n                                    <PaginationLink onClick={e => handleClick(e, i)} href=\"#\">\n                                    {i + 1}\n                                    </PaginationLink>\n                                </PaginationItem>\n                            )\n                        }\n                        return \".\"\n                    \n                    })}\n                    <PaginationItem disabled={currentPage === Math.ceil(total/20)-1}>\n                        <PaginationLink onClick={handleNextClick} next href=\"#\" />\n                    </PaginationItem>\n                </Pagination>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BooksList;","import React,{useContext} from \"react\";\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport { Link } from \"react-router-dom\";\nimport BooksList from \"./BooksList\"\n\nconst Home=()=>{\n    const {currentUser}=useContext(CurrentUserContext)\n    return (\n        <div className=\"text-center\">\n            <h1>Book API</h1>\n            <p> You can follow your library using easy steps.</p>\n            {currentUser \n            ? (<div>\n                    <h3>Welcome Back, {currentUser.username}</h3>\n                    <img className=\"card-img rounded-circle user-img mt-2 ml-2 p-2\" style={{width:'150px'}} src={currentUser.image} alt=\"user avatar\"/>\n                    <BooksList />\n                </div>\n            )\n        :(\n            <p>\n                <Link className=\"btn btn-primary mr-3\" to=\"/login\">\n                    Login\n                </Link>\n                <Link className=\"btn btn-primary\" to=\"/signup\">\n                    SignUp\n                </Link>\n            </p>\n        )}\n        </div>\n    )\n}\nexport default Home;","import React,{useContext} from \"react\";\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useFormik } from 'formik';\nimport { Card, Button, CardBody, \n        Form,FormGroup,Label ,Input} from 'reactstrap';\n\nconst validate = values => {\n    const errors = {}; \n    if (!values.password) {\n        errors.password = 'Required';\n    } else if (values.password.length < 6) {\n        errors.password = 'Must be at least 6 characters';\n    }\n\n    if (!values.first_name) {\n        errors.first_name = 'Required';\n    } else if (values.first_name.length > 15) {\n        errors.first_name = 'Must be 15 characters or less';\n    }\n\n    if (!values.last_name) {\n        errors.last_name = 'Required';\n    } else if (values.last_name.length > 20) {\n        errors.last_name = 'Must be 20 characters or less';\n    }\n    \n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n\nconst EditProfileForm=({save})=>{\n    const {currentUser}=useContext(CurrentUserContext)\n    const formik = useFormik({\n        initialValues : {\n            username  : currentUser.username,\n            first_name : currentUser.firstName,\n            last_name  : currentUser.lastName,\n            email     : currentUser.email,\n            password  : '',\n            image : currentUser.image\n        },\n        validate, \n        onSubmit      : async (values,actions) => {\n          try {\n            let res=await save(currentUser.username,values);\n            if(res.success){\n            actions.setStatus({ message: 'Profile Updated' });\n            }\n          } catch (err) {\n            formik.errors.password = err;\n          }\n        }\n      });\n    \n    return (\n        <div className=\"col-md-4 m-auto\">\n            <h2>Profile</h2>\n            <Card className=\"card\">\n                <CardBody>\n                    <Form onSubmit={formik.handleSubmit}>\n                        <FormGroup>\n                            <Label >Username</Label>\n                            <p className=\"font-weight-bold\">{formik.values.username}</p>\n                            <img className=\"card-img rounded-circle user-img mt-2 ml-2 p-2\" style={{width:'100px'}} src={formik.values.image} alt=\"user avatar\"/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>First Name</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"first_name\"\n                                value={formik.values.first_name}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.first_name && formik.errors.first_name ? <div className=\"alert alert-danger\">{formik.errors.first_name}</div>:null}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Last Name</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"last_name\"\n                                value={formik.values.last_name}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.last_name && formik.errors.last_name ? <div className=\"alert alert-danger\">{formik.errors.last_name}</div>:null}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.email && formik.errors.email ? <div className=\"alert alert-danger\">{formik.errors.email}</div>:null}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Confirm password to make changes:</Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.password && formik.errors.password ? <div className=\"alert alert-danger\">{formik.errors.password}</div>:null}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"image\">Avatar image </Label>\n                            <Input \n                                type=\"text\"\n                                id=\"image\"\n                                name=\"image\"\n                                value={formik.values.image}\n                                placeholder=\"Enter your image\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.image && formik.errors.image ? <div className=\"alert alert-danger\">{formik.errors.image}</div>:null}\n                        </FormGroup>\n                        <div className=\"text-success\">\n                        {formik.status && formik.status.message ? formik.status.message:\"\"}\n                        </div>\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\nexport default EditProfileForm;","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, FormGroup, Label, Input} from \"reactstrap\";\nimport {Button} from \"reactstrap\"\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = 'Required';\n    } else if (values.username.length > 15) {\n        errors.username = 'Must be 15 characters or less';\n    }\n  \n    if (!values.password) {\n      errors.password = 'Required';\n    } else if (values.password.length < 6) {\n        errors.password = 'Must be at least 6 characters';\n    }\n  \n    return errors;\n  };\n\n\nconst LoginForm=({login})=>{\n    const history = useHistory();\n    const formik = useFormik({\n      initialValues : {\n        username : '',\n        password : ''\n      },\n      validate,\n      onSubmit      : async (values) => {\n        try {\n          let res=await login(values);\n          if(res.success){\n            history.push('/')\n        }\n        } catch (err) {\n          formik.errors.password = err;\n        }\n      }\n    });\n    \n    \n    return (\n        <section className=\"col-md-4 m-auto\">\n        <Form onSubmit={formik.handleSubmit}>\n            <h2>Login</h2>\n            <FormGroup>\n                <Label for=\"username\">Username </Label>\n                <Input \n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={formik.values.username}\n                    placeholder=\"Enter username\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.username && formik.errors.username ? <div className=\"alert alert-danger\">{formik.errors.username}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"password\">Password </Label>\n                <Input \n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    placeholder=\"Enter your password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.password && formik.errors.password ? <div className=\"alert alert-danger\">{formik.errors.password}</div>:null}\n            </FormGroup>\n            <Button color=\"primary\">Submit</Button>\n        </Form>\n        </section>\n    )\n}\nexport default LoginForm;","import React,{useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./MyBookCard.css\"\nimport { Card } from \"react-bootstrap\";\n\nconst MyBookCard=({book})=>{\n  const [visible,setVisible]= useState(false)\n  let status='';\n  if (book.current_status===\"Reading\"){\n    status=\"Reading\";\n  } else if(book.current_status===\"Finished\"){\n    status=\"Finished\";\n  } else {\n    status=\"WantToRead\"\n  }\n  let finDate=\"\"\n  let date=false;\n  if(book.current_status===\"Finished\" && book.finished_date) {\n    date=true;\n    finDate=new Date(book.finished_date).toLocaleDateString();\n  }\n  const handleRead=()=>setVisible(!visible);\n    return (\n      <section className=\"MyBookCard\">\n        <Card>\n          <Card.Body>\n            <Link to={`books/${book.book_id}`}>\n              <Card.Title>\n                {book.name}\n                {book.cover && <img style={{width:'100px'}}src={book.cover}\n                alt={book.name}\n                className=\"float-left ml-5\" />}\n              </Card.Title>\n              {book.author && <p><small>by {book.author}</small></p>}\n              {book.rating && <p>Rating: {book.rating}</p>}\n              {book.current_status===\"Reading\" && <p>Progress: %{book.progress}</p>}\n            </Link>\n              <p className={visible ? \"MyBookCard-description-visible\" : \"MyBookCard-description\"}><small>{book.description.replace(/(<(\\/?)[a-zA-Z]+>)/g,' ')}</small></p> \n              <button \n                onClick={handleRead}\n                className=\"read-button\">\n                {visible ? \"Read Less\" : \"Read More...\"}</button>\n          </Card.Body>\n          <Card.Footer className={status}>\n          <Link to={`mybooks/${book.current_status}`}>\n          {book.current_status}\n          </Link>\n            <span id=\"categories\" className=\"float-left ml-1\">Categories: {book.categories}</span>\n            {date && <p>Finished Date: {finDate}</p>}\n          </Card.Footer>\n        </Card>\n      </section>\n      );\n}\nexport default MyBookCard;","import React,{useContext} from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport MyBookCard from \"./MyBookCard\"\n// import SearchForm from \"./SearchForm\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CurrentUserContext from \"./CurrentUserContext\"\n\nconst MyBooksList=()=>{\n    const {currentUser,myBooks}=useContext(CurrentUserContext)        \n    if (!currentUser) {\n        return <Redirect to=\"/login\"/>\n    }\n        return (\n            <div className=\"col-md-8 offset-md-2\">\n                <h3>Books</h3>                \n                {myBooks && myBooks.map(book=>\n                   <MyBookCard book={book} key={book.book_id}/>\n                )}\n            </div>\n        )\n    \n}\nexport default MyBooksList;","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, FormGroup, Label, Input} from \"reactstrap\";\nimport {Button} from \"reactstrap\"\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.username) {\n        errors.username = 'Required';\n    } else if (values.username.length > 15) {\n        errors.username = 'Must be 15 characters or less';\n    }\n  \n    if (!values.password) {\n        errors.password = 'Required';\n    } else if (values.password.length < 6) {\n        errors.password = 'Must be at least 6 characters';\n    }\n\n    if (!values.first_name) {\n        errors.first_name = 'Required';\n    } else if (values.first_name.length > 15) {\n        errors.first_name = 'Must be 15 characters or less';\n    }\n\n    if (!values.last_name) {\n        errors.last_name = 'Required';\n    } else if (values.last_name.length > 20) {\n        errors.last_name = 'Must be 20 characters or less';\n    }\n    \n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\nconst SignUpForm=({signup})=>{\n    const history= useHistory();\n    const formik = useFormik({\n        initialValues : {\n          username : '',\n          first_name: '',\n          last_name: '',\n          email: '',\n          password : '',\n          image: ''\n        },\n        validate,\n        onSubmit      : async (values) => {\n          try {\n            let res=await signup(values);\n            if(res.success){\n              history.push('/')\n          }\n          } catch (err) {\n            formik.errors.password = err;\n          }\n        }\n      });\n    \n    return (\n        <section className=\"col-md-4 m-auto\">\n        <Form onSubmit={formik.handleSubmit}>\n            <h2>SignUp</h2>\n            <FormGroup>\n                <Label for=\"username\">Username </Label>\n                <Input \n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={formik.values.username}\n                    placeholder=\"Enter username\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.username && formik.errors.username ? <div className=\"alert alert-danger\">{formik.errors.username}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"password\">Password </Label>\n                <Input \n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    placeholder=\"Enter your password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.password && formik.errors.password ? <div className=\"alert alert-danger\">{formik.errors.password}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"first_name\">First Name </Label>\n                <Input \n                    type=\"text\"\n                    id=\"first_name\"\n                    name=\"first_name\"\n                    value={formik.values.first_name}\n                    placeholder=\"Enter your First Name\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.first_name && formik.errors.first_name ? <div className=\"alert alert-danger\">{formik.errors.first_name}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"last_name\">Last Name </Label>\n                <Input \n                    type=\"text\"\n                    id=\"last_name\"\n                    name=\"last_name\"\n                    value={formik.values.last_name}\n                    placeholder=\"Enter your last Name\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.last_name && formik.errors.last_name ? <div className=\"alert alert-danger\">{formik.errors.last_name}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"email\">Email </Label>\n                <Input \n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    placeholder=\"Enter your email\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.email && formik.errors.email ? <div className=\"alert alert-danger\">{formik.errors.email}</div>:null}\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"image\">Avatar image </Label>\n                <Input \n                    type=\"text\"\n                    id=\"image\"\n                    name=\"image\"\n                    value={formik.values.image}\n                    placeholder=\"Enter your image\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.image && formik.errors.image ? <div className=\"alert alert-danger\">{formik.errors.image}</div>:null}\n            </FormGroup>\n            <Button type=\"submit\" color=\"primary\">Submit</Button>\n        </Form>\n        </section>\n    )\n}\nexport default SignUpForm;","import React,{useContext} from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink,Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\nimport CurrentUserContext from \"./CurrentUserContext\"\n\nfunction NavBar({logout}) {\n  let {currentUser}=useContext(CurrentUserContext)\n  if(currentUser){\n    return (\n      <div>\n        <Navbar expand=\"md\">\n          <NavLink exact to=\"/\" className=\"navbar-brand\">\n          Books API\n          </NavLink>  \n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"/mybooks\">My Books</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/profile\">Profile</NavLink>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/\" onClick={logout}>Logout <img className=\"card-img rounded-circle user-img mt-2 ml-2 p-2\" style={{width:'50px'}} src={currentUser.image} alt=\"user avatar\"/>{currentUser.username}</Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n      </div>      \n    )\n  }\n    return (\n      <div>\n        <Navbar expand=\"md\">\n          <NavLink exact to=\"/\" className=\"navbar-brand\">\n            Book API\n          </NavLink> \n\n        </Navbar>\n      </div>\n    );\n  }\n  \n  export default NavBar;","import {useState,useEffect} from \"react\";\n\nconst useLocalStorageState=(key,initialValue=null)=>{\n    const [state,setState]=useState(()=>{\n        let value=(window.localStorage.getItem(key) || initialValue);\n        return value;\n    })\n    useEffect(()=>{\n        window.localStorage.setItem(key,state)\n    },[key,state])\n    return [state,setState]\n}\nexport default useLocalStorageState;","import React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./ReadingCard.css\"\nimport { Card } from \"react-bootstrap\";\n\nconst ReadingCard=({book,status,remove})=>{\n  const [visible,setVisible]= useState(false);\n  const history = useHistory();\n  let current_status='';\n  if (status===\"Reading\"){\n    current_status=\"Reading\";\n  } else if(status===\"Finished\"){\n    current_status=\"Finished\";\n  } else {\n    current_status=\"Want To Read\"\n  }\n  let finDate=\"\"\n  let date=false;\n  if(current_status===\"Finished\" && book.finished_date) {\n    date=true;\n    finDate=new Date(book.finished_date).toLocaleDateString();\n  }\n  async function handleDelete(id){\n    await remove(id);\n    history.push('/mybooks')\n  }\n  const handleRead=()=>setVisible(!visible);\n    return (\n      <section className=\"BookCard\">\n      <Card>\n        <Card.Body>\n          <Link to={`/books/${book.book_id}`}>\n              <Card.Title>\n                {book.name}\n                {book.cover && <img style={{width:'100px'}}src={book.cover}\n                alt={book.name}\n                className=\"float-left ml-5\" />}\n              </Card.Title>\n              {book.author && <p><small>by {book.author}</small></p>}\n              {book.rating && <p>Rating: {book.rating}</p>}\n              {current_status===\"Reading\" && <p>Progress: {book.progress}</p>}\n            </Link>\n              <p className={visible ? \"BookCard-description-visible\" : \"BookCard-description\"}><small>{book.description.replace(/(<(\\/?)[a-zA-Z]+>)/g,' ')}</small></p> \n              <button \n                onClick={()=>handleRead(book.book_id)}\n                className=\"read-button\">\n                {visible ? \"Read Less\" : \"Read More...\"}</button>\n            </Card.Body>\n            <Card.Footer className={current_status===\"Want To Read\" ? \"WantToRead\" : current_status}>\n            \n            {current_status}\n            \n            {date && <p>Finished Date: {finDate}</p>}\n            <span id=\"categories\" className=\"float-left ml-5\">Categories: {book.categories}</span>\n            <Link to={`update/${book.book_id}`}\n                className=\"btn btn-primary float-right update\" \n                >\n                Update Status\n            </Link>\n            <button \n                onClick={()=>handleDelete(book.book_id)}\n                className=\"btn btn-danger float-right\">\n                Delete</button>\n            </Card.Footer>\n          </Card>\n          </section>\n      );\n}\nexport default ReadingCard;","import React,{useState,useEffect,useContext} from \"react\";\nimport BooksApi from \"./api\"\nimport { Redirect, useParams } from \"react-router-dom\";\nimport ReadingCard from \"./ReadingCard\"\n// import SearchForm from \"./SearchForm\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CurrentUserContext from \"./CurrentUserContext\"\n\nconst StatusList=({remove})=>{\n    const {status}=useParams();\n    let cnvrtedstatus='';\n    if (status===\"Finished\"){\n        cnvrtedstatus=\"finished\";\n    } else if (status===\"Reading\"){\n        cnvrtedstatus=\"reading\";\n    } else {\n        cnvrtedstatus=\"wanttoread\"\n    }\n    const [books,setBooks]=useState([]);\n    const {currentUser}=useContext(CurrentUserContext)\n    useEffect(()=>{\n        getBooks(cnvrtedstatus)\n    },[cnvrtedstatus])\n    async function getBooks(status){\n        let books=await BooksApi.getBooksByStatus(status);\n        setBooks(books)\n    }\n    if(!books) return <h3>Loading...<i className=\"fas fa-4x fa-spinner fa-spin\" /></h3>\n    if (!currentUser) {\n        return <Redirect to=\"/login\"/>\n    } else{\n        return (\n            <div className=\"col-md-8 offset-md-2\">\n                <h3>{status} Books</h3>\n                \n                {books.map(book=>\n                   <ReadingCard book={book} remove={remove} status={status} key={book.book_id}/>\n                )}\n            </div>\n        )\n    }\n}\nexport default StatusList;","import React, { useContext, useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./ReadingCard.css\"\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem\n      } from \"reactstrap\";\nimport { Card } from \"react-bootstrap\";\n\nconst DetailsCard=({book,userBooks})=>{\n    const [visible,setVisible]= useState(false)\n    const {addBookToMyBooks}=useContext(CurrentUserContext);\n    const [dropdownOpen, setOpen] = useState(false);\n    const history = useHistory();\n    const toggle = () => setOpen(!dropdownOpen);\n    var options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n    let publishedDate=new Date(book.published_date).toLocaleDateString(\"en-US\", options);\n    const res=userBooks.find(obj => {\n        return obj.book_id === book.id\n    })\n    let hasIt=false\n    if(res) hasIt=true;\n    async function handleStatus(status){\n        addBookToMyBooks(book,status);\n        history.push('/mybooks')\n    }\n    const handleRead=()=>setVisible(!visible);\n    return (\n      <section className=\"BookCard\">\n      <Card>\n            <Card.Body>\n            {book.cover && <img style={{width:'100px'}}src={book.cover}\n            alt={book.name}\n            className=\"card-img ml-1\" />}            \n              <Card.Title>\n                {book.name}\n              </Card.Title>\n              {book.author && <p><small>by {book.author}</small></p>}\n              {book.rating && <p>Rating: {book.rating}</p>}\n              <p className={visible ? \"BookCard-description-visible\" : \"BookCard-description\"}><small>{book.description.replace(/(<(\\/?)[a-zA-Z]+>)/g,' ')}</small></p> \n              <button \n                onClick={handleRead}\n                className=\"read-button\">\n                {visible ? \"Read Less\" : \"Read More...\"}</button>\n              <p>Publisher: {book.publisher},  Published Date: {publishedDate}</p>\n              <p>Total Page: {book.page_count}</p>\n            </Card.Body>\n            <Card.Footer>\n            <span id=\"categories\" className=\"float-left ml-5\">Categories: {book.categories}</span>\n            <ButtonDropdown \n              isOpen={dropdownOpen} \n              toggle={toggle}\n              className={hasIt ? \"disabled float-right\" : \"active float-right\"}\n              disabled={hasIt}>\n              <DropdownToggle caret \n              color={hasIt ? \"danger\" : \"success\"}>\n                Add Library\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Status</DropdownItem>\n                <DropdownItem \n                  className=\"WantToRead\"\n                  onClick={()=>handleStatus(\"Want to Read\")}\n                >Want to Read</DropdownItem>\n                <DropdownItem\n                  onClick={()=>handleStatus(\"Finished\")}\n                  className=\"Finished\"\n                >Finished</DropdownItem>\n                <DropdownItem\n                  onClick={()=>handleStatus(\"Reading\")}\n                  className=\"Reading\"\n                >Reading</DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>  \n              </Card.Footer>\n          </Card>\n          </section>\n      );\n}\nexport default DetailsCard;","import React,{useState, useEffect,useContext} from \"react\";\nimport BookApi from \"./api\"\nimport {useParams,Redirect} from \"react-router-dom\";\nimport DetailsCard from \"./DetailsCard\"\nimport CurrentUserContext from \"./CurrentUserContext\"\n\nconst BookDetails=()=>{\n    const {id}=useParams();\n    const [book,setBook]=useState(null)\n    const {currentUser,myBooks}=useContext(CurrentUserContext)\n    useEffect(()=>{\n        async function getBook() {\n            try {\n                let book = await BookApi.getBook(id); \n                setBook(book);\n            } catch (e) {\n                if(e){\n                    let book=await BookApi.getBooksFromApiById(id);\n                    let bookData={\n                        id:book.id,\n                        name:book.volumeInfo.title,\n                        cover:book.volumeInfo.imageLinks.smallThumbnail,\n                        author:book.volumeInfo.authors.toString(),\n                        page_count:book.volumeInfo.pageCount,\n                        publisher:book.volumeInfo.publisher,\n                        published_date:book.volumeInfo.publishedDate,\n                        description:book.volumeInfo.description,\n                        categories:(book.volumeInfo.categories ? book.volumeInfo.categories.toString() : \"Missing\")\n                    }\n                    await BookApi.addBook(bookData)\n                    let mbook=await BookApi.getBook(id)\n                    setBook(mbook);\n               } \n            }           \n        }\n        getBook()\n      },[id])\n      if (!book) return <h3>Loading...<i className=\"fas fa-4x fa-spinner fa-spin\" /></h3>;\n      if (!currentUser) {\n        return <Redirect to=\"/login\"/>\n    } else{\n    return (\n        <div className=\"col-md-8 offset-md-2\">\n            <h3>Book details</h3>\n            <DetailsCard book={book} userBooks={myBooks}/>\n\n        </div>\n    )\n    }\n}\nexport default BookDetails;","import React,{useContext} from \"react\";\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport { useParams } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useFormik } from 'formik';\nimport { Card, Button, CardBody, \n        Form,FormGroup,Label ,Input} from 'reactstrap';\n\nconst validate = values => {\n    const errors = {}; \n    if (!values.current_status) {\n        errors.current_status = 'Required';\n    }\n    return errors;\n  };\n\n\nconst UpdateMyBookForm=({update})=>{\n    console.log(\"Mete\")\n    const {book_id} =useParams();\n    console.log(book_id)\n    const {currentUser,myBooks}=useContext(CurrentUserContext)\n    let data=myBooks.find(book=>book.book_id===book_id)\n    let initials={}\n    if (data.current_status===\"Finished\"){\n        initials.username=currentUser.username\n        initials.book_id = data.book_id\n        initials.current_status  = data.current_status\n        initials.rating = data.rating\n        initials.finished_date = data.finished_date        \n    } else if (data.current_status===\"Reading\"){\n        initials.username=currentUser.username\n        initials.book_id = data.book_id\n        initials.current_status  = data.current_status\n        initials.progress=data.progress\n    } else {\n        initials.username=currentUser.username\n        initials.book_id = data.book_id\n        initials.current_status  = data.current_status\n    }\n    const formik = useFormik({\n        initialValues : initials,\n        validate,\n        onSubmit      : async (values,actions) => {\n          try {\n            let res=await update(values.book_id,values);\n            if(res.success){\n            actions.setStatus({ message: 'Book Status Updated' });\n            }\n          } catch (err) {\n            formik.errors.password = err;\n          }\n        }\n      });\n    \n    return (\n        <div className=\"col-md-4 m-auto\">\n            <h2>Book Status</h2>\n            <Card className=\"card\">\n                <CardBody>\n                    <Form onSubmit={formik.handleSubmit}>\n                        <FormGroup>\n                            <Label >Username</Label>\n                            <p className=\"font-weight-bold\">{formik.values.username}</p>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>book_id</Label>\n                            <p>{formik.values.book_id}</p>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Current Status</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"current_status\"\n                                value={formik.values.current_status}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.current_status && formik.errors.current_status ? <div className=\"alert alert-danger\">{formik.errors.current_status}</div>:null}\n                        </FormGroup>\n                        {formik.values.current_status===\"Finished\" && (<FormGroup>\n                            <Label>Rating</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"rating\"\n                                value={formik.values.rating}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.rating && formik.errors.rating ? <div className=\"alert alert-danger\">{formik.errors.rating}</div>:null}\n                        </FormGroup>)\n                        }\n                        {formik.values.current_status===\"Finished\" && (<FormGroup>\n                            <Label>Finished Date</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"finished_date\"\n                                value={formik.values.finished_date}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.finished_date && formik.errors.finished_date ? <div className=\"alert alert-danger\">{formik.errors.finished_date}</div>:null}\n                        </FormGroup>)\n                        }\n                        {(formik.values.current_status!==\"Finished\" && formik.values.current_status!==\"Want to Read\") && (<FormGroup>\n                            <Label for=\"progress\">Progress </Label>\n                            <Input \n                                type=\"text\"\n                                id=\"progress\"\n                                name=\"progress\"\n                                value={formik.values.progress}\n                                placeholder=\"Enter total page count read\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.progress && formik.errors.progress ? <div className=\"alert alert-danger\">{formik.errors.progress}</div>:null}\n                        </FormGroup>)\n                        }\n                        <div className=\"text-success\">\n                        {formik.status && formik.status.message ? formik.status.message:\"\"}\n                        </div>\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\nexport default UpdateMyBookForm;","import React,{useState, useEffect} from \"react\"\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport BookApi from \"./api\";\nimport Home from \"./Home\";\nimport EditProfileForm from \"./EditProfileForm\"\nimport LoginForm from \"./LoginForm\"\nimport MyBooksList from \"./MyBooksList\"\nimport SignUpForm from \"./SignUpForm\";\nimport NavBar from \"./NavBar\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorageState from \"./hooks/useLocalStorageState\"\nimport CurrentUserContext from \"./CurrentUserContext\"\nimport StatusList from \"./StatusList\";\nimport BookDetails from \"./BookDetails\";\nimport UpdateMyBookForm from \"./UpdateMyBookForm\";\n\n\nfunction App() {\n  const [currentUser,setCurrentUser]=useState(null);\n  const [isDataLoaded,setIsDataLoaded]=useState(false);\n  const [myBooks,setMyBooks]=useState(null);\n  const [token,setToken]=useLocalStorageState(\"token\");\n  useEffect(()=>{\n    async function getCurrentUser(){\n    if(token){\n      try{\n      let{username}=jwt.decode(token)\n      BookApi.token=token\n      let currentUser=await BookApi.getCurrentUser(username);\n      let library=await BookApi.getMyBooks(username)\n      setMyBooks(library)\n      setCurrentUser(currentUser)\n    } catch (e){\n      console.error(\"error loading\",e)\n      setCurrentUser(null)\n    }\n  }\n  setIsDataLoaded(true)\n  }\n  setIsDataLoaded(false)\n  getCurrentUser()\n  },[token]);\n  \n  /** Signing Up feature */\n  async function signup(data){\n    try{\n      let token=await BookApi.signup(data);\n      setToken(token)\n      return {success:true}\n      } catch (e){\n        console.error(\"failed\",e)\n        return {success:false}\n      }   \n    }\n  \n  /** Login feature */\n  async function login(data){\n    try{\n      let token=await BookApi.login(data)\n      setToken(token)\n      return {success:true}\n    } catch (e){\n      console.error(\"failed\",e)\n      return {success:false}\n    }\n  }\n\n  /** Logout feature */\n\n  function logout(){\n    setCurrentUser(null)\n    setToken(null)\n  }\n  /** Update user profile feature */\n\n  async function save(username,data){\n    let profileData={\n      first_name:data.first_name,\n      last_name:data.lastName,\n      email:data.email,\n      image:data.image\n    }\n    try{\n      let user=await BookApi.update(username,profileData)\n      setCurrentUser(user)\n      return {success:true}\n    } catch (e){\n      console.error(\"failed\",e)\n      return {success:false}\n    }\n  }\n\n  /** Adding Book to my_books table feature */\n  async function addBookToMyBooks(data,status){\n    \n    //Checking is book in our database\n    try {\n      let book=await BookApi.getBook(data.id);\n      let myoldBookData={\n        username:currentUser.username,\n        book_id:book.id,\n        current_status:status\n      }\n      await BookApi.addBookToMyBook(myoldBookData);\n      updateLibrary();\n      return {success:true}\n    } catch (e){\n      console.error(\"failed\",e)\n      if (e){\n        let bookData={\n          id:data.id,\n          name:data.volumeInfo.title,\n          cover:data.volumeInfo.imageLinks.smallThumbnail,\n          author:data.volumeInfo.authors.toString(),\n          page_count:data.volumeInfo.pageCount,\n          publisher:data.volumeInfo.publisher,\n          published_date:data.volumeInfo.publishedDate,\n          description:data.volumeInfo.description,\n          categories:(data.volumeInfo.categories ? data.volumeInfo.categories.toString() : \"Missing\")\n        }\n        let myBookData={\n          username:currentUser.username,\n          book_id:data.id,\n          current_status:status,\n          rating:(data.volumeInfo.avarageRating ? data.volumeInfo.averageRating.toString() : \"0\" )\n        }\n        await BookApi.addBook(bookData);\n        await BookApi.addBookToMyBook(myBookData);\n        updateLibrary();\n        console.error(\"failed\",e)\n        return {success:false}\n      }\n    }  \n  }\n\n  /** Updating my_books table feature */\n\n  async function update(username,data){\n    try {\n      delete data.username;\n      let book=await BookApi.getBook(data.book_id);\n      if(data.current_status!==\"Finished\"){\n        data.progress=(+data.progress/book.page_count*100).toFixed(2);\n        data.progress= +data.progress;\n      } else {\n        data.progress=100;\n      }\n      await BookApi.updateMyBook(username,data);\n      updateLibrary()\n      return {success:true}\n    } catch (e) {\n      console.error(\"failed\",e)\n      return {success:false}\n    }\n  }\n  /** Updating library helper function */\n\n  async function updateLibrary(){\n    const library=await BookApi.getMyBooks(currentUser.username);\n    setMyBooks(library);\n  }\n\n  /** Removing book from my_books table feature */\n\n  async function remove(book_id){\n    try {\n      await BookApi.deleteFromMybooks(book_id);\n      updateLibrary();\n      return {success:true}\n    } catch (e) {\n      console.error(\"failed\",e)\n      return {success:false}      \n    }\n  }\n\n  if(!isDataLoaded) return <h3>Loading</h3>\n    return (\n      <div className=\"App\">\n      <BrowserRouter>\n        <CurrentUserContext.Provider value={{currentUser,myBooks,addBookToMyBooks}}>\n          <NavBar logout={logout}/>\n          <main>\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route exact path='/signup'>\n                <SignUpForm signup={signup}/>\n              </Route>\n              <Route exact path='/login'>\n                <LoginForm login={login}/>\n              </Route>\n              <Route exact path='/profile'>\n                <EditProfileForm save={save}/>\n              </Route>\n              <Route exact path='/mybooks'>\n                <MyBooksList />\n              </Route>\n              <Route exact path='/mybooks/update/:book_id'>\n                <UpdateMyBookForm update={update} />\n              </Route>\n              <Route exact path='/mybooks/:status'>\n                <StatusList remove={remove}/>\n              </Route>\n              <Route exact path='/books/:id'>\n                <BookDetails />\n              </Route>\n              <Route>\n                <p>Hmmm. I can't seem to find what you want.</p>\n              </Route>\n            </Switch>\n          </main>\n        </CurrentUserContext.Provider>\n      </BrowserRouter>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}